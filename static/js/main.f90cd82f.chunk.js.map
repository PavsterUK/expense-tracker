{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseFilter","for","defaultValue","defaultFilterYear","onChange","event","onFilterYearSelected","target","value","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","filteredExpenses","length","map","item","id","ChartBar","barHeight","maxValue","Math","round","style","height","label","Chart","values","dataPoints","datapoint","totalMax","max","dataPoint","ExpensesChart","chartDataPoints","expenses","expense","getMonth","Expenses","useState","filterYear","setFilterYear","items","filter","toString","selectedYear","ExpenseForm","setTitle","setAmount","setDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","closeForm","NewExpense","isOpen","setIsOpen","closeNewExpenseForm","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f90cd82f.chunk.js","sourcesContent":["import './Card.css'\n\n\nfunction Card(props) {\n  const classes = 'card ' + props.className;\n  return <div className={classes}> {props.children}</div>\n}\n\nexport default Card;","import React from \"react\";\nimport \"./ExpensesFilter.css\";\n\nconst ExpenseFilter = (props) => {\n  const selectHandler = (event) => {\n    props.onFilterYearSelected(event.target.value);\n  };\n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label for=\"years\">Filter by Year:</label>\n        <select defaultValue={props.defaultFilterYear} onChange={selectHandler}>\n          <option value=\"2019\">2019</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2022\">2022</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpenseFilter;\n","import './ExpenseDate.css'\n\nfunction ExpenseDate(props) {\n  const month = props.date.toLocaleString('en-US', {month: 'long'});\n\tconst day = props.date.toLocaleString('en-US', {day: '2-digit'});\n\tconst year = props.date.getFullYear();\n\n\treturn(\n      <div className=\"expense-date\">\n          <div className=\"expense-date__month\">{month}</div>\n          <div className=\"expense-date__day\">{day}</div>\n          <div className=\"expense-date__year\">{year}</div>\n      </div>\n\t);\n}\n\nexport default ExpenseDate;","import React from \"react\";\nimport \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n          <div className=\"expense-item__price\">Â£{props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport './ExpensesList.css';\n\nconst ExpensesList = (props) => {\n  if (props.filteredExpenses.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">No expenses found.</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {\n        props.filteredExpenses.map((item) => (\n          <ExpenseItem\n            key={item.id}\n            title={item.title}\n            amount={item.amount}\n            date={item.date}\n          />\n        ))\n      }\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React from \"react\";\nimport './ChartBar.css'\n\nconst ChartBar = (props) => {\n  let barHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n\n  //console.log(props.value);\n  //console.log(props.maxValue);\n  //console.log(props.label);\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div className=\"chart-bar__fill\" style={{ height: barHeight }}></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import React from \"react\";\nimport ChartBar from \"./ChartBar\";\nimport './Chart.css'\n\nconst Chart = (props) => {\n  const values = props.dataPoints.map(datapoint => datapoint.value);\n  const totalMax = Math.max(...values);\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMax}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from 'react';\nimport Chart from '../Chart/Chart';\n\nconst ExpensesChart = (props) => {\n\nlet chartDataPoints = [\n  {label: 'Jan', value: 0},\n  {label: 'Feb', value: 0},\n  {label: 'Mar', value: 0},\n  {label: 'Apr', value: 0},\n  {label: 'May', value: 0},\n  {label: 'Jun', value: 0},\n  {label: 'Jul', value: 0},\n  {label: 'Aug', value: 0},\n  {label: 'Sep', value: 0},\n  {label: 'Oct', value: 0},\n  {label: 'Nov', value: 0},\n  {label: 'Dec', value: 0}\n]; \n\n\n\nfor (const expense of props.expenses) {\n  const expenseMonth = expense.date.getMonth();\n  chartDataPoints[expenseMonth].value += expense.amount;\n}\n\n  return <Chart dataPoints={chartDataPoints}/>\n}\n\nexport default ExpensesChart\n","import React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"./ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nfunction Expenses(props) {\n  const [filterYear, setFilterYear] = useState(\"2020\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilterYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter(\n    (item) => item.date.getFullYear().toString() === filterYear.toString()\n  );\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpenseFilter\n          defaultFilterYear={filterYear}\n          onFilterYearSelected={filterChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses}/>\n        <ExpensesList filteredExpenses={filteredExpenses}/>\n      </Card>\n    </div>\n  );\n}\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport './NewExpense.css';\n\nconst ExpenseForm = (props) => {\n  const [title, setTitle] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n\n  const titleChangeHandler = (event) => {\n    setTitle(event.target.value);\n  };\n\n  const amountChangeHandler = (event) => {\n    setAmount(event.target.value);\n  };\n\n  const dateChangeHandler = (event) => {\n    setDate(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: title,\n      amount: +amount,\n      date: new Date(date),\n    };\n\n    props.onSaveExpenseData(expenseData);\n    setTitle(\"\");\n    setAmount(\"\");\n    setDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input type=\"text\" onChange={titleChangeHandler} value={title} />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            onChange={amountChangeHandler}\n            value={amount}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            onChange={dateChangeHandler}\n            value={date}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button type='button' onClick={props.closeForm}>Cancel</button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, {useState} from 'react';\nimport './NewExpense.css'\nimport ExpenseForm from './ExpenseForm'\n\n\nconst NewExpense = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString()\n    }\n    props.onAddExpense(expenseData);\n    closeNewExpenseForm();\n  }\n\n  const openNewExpenseForm = () => (\n    setIsOpen(true)\n  );\n\n  const closeNewExpenseForm = () => (\n    setIsOpen(false)\n  );\n\n  return (\n    <div className=\"new-expense\">\n      { !isOpen && <button type=\"button\" onClick={openNewExpenseForm}>Add New Expense</button>}\n      { isOpen && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} closeForm={closeNewExpenseForm}/>}\n    </div>\n  );\n};\n\nexport default NewExpense;","import Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from './components/NewExpense/NewExpense'\nimport React, { useState } from \"react\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expense => {\n    setExpenses((prevExpenses) => (\n      [expense, ...expenses]\n    ));\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler}/>\n      <Expenses items={expenses}/>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}